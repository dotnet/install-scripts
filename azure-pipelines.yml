trigger:
  - main

pr:
  - main

variables:
- ${{ if eq(variables._RunAsInternal, True) }}:
  - group: DotNet-Install-Scripts-BuildPipeline-Params
- template: eng/common-variables.yml

resources:
  containers:
  - container: LinuxContainer
    image: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-cross

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      artifacts:
        publish:
          artifacts: true
          logs: true
          manifests: true
      enableMicrobuild: true
      enablePublishUsingPipelines: true
      workspace:
        clean: all
      jobs:
      - job: Windows_NT
        timeoutInMinutes: 90
        pool:
          ${{ if eq(variables._RunAsPublic, True) }}:
            name: NetCore-Public
            demands: ImageOverride -equals Build.Server.Amd64.VS2017.Open
          ${{ if eq(variables._RunAsInternal, True) }}:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals Build.Server.Amd64.VS2017
        strategy:
          matrix:
            ${{ if eq(variables._RunAsInternal, True) }}:
              Build_Release:
                _BuildConfig: Release
            ${{ if eq(variables._RunAsPublic, True) }}:
              Build_Debug:
                _BuildConfig: Debug
        preSteps:
        - checkout: self
          clean: true
        steps:
        - task: UseDotNet@2
          displayName: Get .NET Core SDK
          inputs:
            version: 3.x
        - task: DotNetCoreCLI@2
          displayName: Run Tests
          inputs: 
            command: test
        - script: eng\common\cibuild.cmd
            -configuration $(_BuildConfig)
            -projects src/Signing/SignScripts.csproj
            -prepareMachine
            $(_InternalBuildArgs)
            /p:Test=false
            /p:DotNetSignType=$(_SignType)
            /p:TeamName=$(_TeamName)
          displayName: Sign dotnet-install.ps1
        - ${{ if eq(variables._RunAsInternal, True) }}:
          - task: PowerShell@2
            displayName: Validate Signature
            inputs:
              filePath: eng/common/sdk-task.ps1
              arguments: -task SigningValidation -restore -msbuildEngine vs 
                /p:InputFiles='$(Build.Repository.LocalPath)/artifacts/bin/SignScripts/**/*.ps1'
                /p:PackageBasePath='$(Build.Repository.LocalPath)/artifacts/bin/SignScripts/'
  - job: LinuxTests
    timeoutInMinutes: 30
    container: LinuxContainer
    pool:
      ${{ if eq(variables._RunAsPublic, True) }}:
        name: NetCore-Public
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64.Open
      ${{ if eq(variables._RunAsInternal, True) }}:
        name: NetCore1ESPool-Internal
        demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
    steps:
    - checkout: self
      displayName: Checkout Self
      clean: true
    - task: UseDotNet@2
      displayName: Get .NET Core SDK
      inputs:
        version: 3.x
    - script: |
        chmod u+x src/dotnet-install.sh
      displayName: 'Add permission to execute'
    - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs: 
        command: test

  - job: MacOSTests
    timeoutInMinutes: 30
    pool: 
      vmImage: 'macOS-latest'
    steps:
    - checkout: self
      displayName: Checkout Self
      clean: true
    - task: UseDotNet@2
      displayName: Get .NET Core SDK
      inputs:
        version: 3.x
    - script: |
        chmod u+x src/dotnet-install.sh
      displayName: 'Add permission to execute'
    - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs: 
        command: test

- ${{ if eq(variables._RunAsInternal, True) }}:
  - template: eng\common\templates\post-build\post-build.yml
    parameters:
      enableSigningValidation: false
      enableNugetValidation: false
      # Symbol validation isn't being very reliable lately. This should be enabled back
      # once this issue is resolved: https://github.com/dotnet/arcade/issues/2871
      enableSymbolValidation: false
      # Sourcelink validation isn't passing for Arcade due to some regressions. This should be
      # enabled back once this issue is resolved: https://github.com/dotnet/arcade/issues/2912
      enableSourceLinkValidation: false
      publishingInfraVersion: 3
      publishDependsOn:
      - Validate
      # This is to enable SDL runs part of Post-Build Validation Stage
      SDLValidationParameters:
        enable: true
        continueOnError: false
        params: ' -SourceToolsList @("policheck","credscan")
        -TsaInstanceURL $(_TsaInstanceURL)
        -TsaProjectName $(_TsaProjectName)
        -TsaNotificationEmail $(_TsaNotificationEmail)
        -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
        -TsaBugAreaPath $(_TsaBugAreaPath)
        -TsaIterationPath $(_TsaIterationPath)
        -TsaRepositoryName "Install-Scripts"
        -TsaCodebaseName "Install-Scripts"
        -TsaPublish $True'
